(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{244:function(e,t,o){"use strict";o.r(t);var a={props:["slot-key"],mounted:function(){this.$nextTick(function(){this.$vuepress.$emit("AsyncMarkdownContentMounted",this.slotKey)})}},n=o(6),i=Object(n.a)(a,function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.slotKey}},[o("Breadcrumb"),e._v(" "),o("h1",{attrs:{id:"titanium-proxy"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#titanium-proxy","aria-hidden":"true"}},[e._v("#")]),e._v(" Titanium.Proxy")]),e._v(" "),o("ProxySummary"),e._v(" "),o("h2",{attrs:{id:"overview"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#overview","aria-hidden":"true"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),o("p",[e._v("On platforms that use native code (Android and iOS), the Proxy type represents a JavaScript wrapper or proxy around a native object. Setting or getting a property on a proxy object results in a method invokation on the native object. Likewise, calling a method on the proxy object results in a method invokation on the native object.")]),e._v(" "),o("p",[e._v("Some Titanium objects are createable: new instances of these objects can be created using factory methods. For example, a Window object can be created using the "),o("code",[e._v("Titanium.UI.createWindow")]),e._v(" method.")]),e._v(" "),o("p",[e._v("In general, developers should avoid modifying the prototype of a Titanium object, or adding methods to a Titanium object. (Adding a simple property such as an ID value is generally OK.)")]),e._v(" "),o("ApiDocs")],1)},[],!1,null,null,null);i.options.__file="proxy.md";t.default=i.exports}}]);